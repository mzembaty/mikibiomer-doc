[{"authors":["Name \"Martin Zembaty\""],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"","tags":null,"title":"Martin Zembaty","type":"authors"},{"authors":["admin"],"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"47e9903a0420f7d7c4ea62254b023aba","permalink":"/authors/nelson-bighetti/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/nelson-bighetti/","section":"authors","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet.","tags":null,"title":"Nelson Bighetti","type":"authors"},{"authors":null,"categories":null,"content":"Here are some tutorials to get you started with 16S rRNA analysis using the MIKIbiomeR package. Dive right in with the Installation guide.\n","date":1576540800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1576540800,"objectID":"4cdd37113783e47641dd300543c94e1b","permalink":"/docs/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/docs/","section":"docs","summary":"Here are some tutorials to get you started with 16S rRNA analysis using the MIKIbiomeR package. Dive right in with the Installation guide.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"R and RStudio If you don\u0026rsquo;t have R and RStudio installed go to the RStudio website and download the right version for your operating system (Windows, Mac, Linux).\nIf you need an introduction using R there are several free resources on the web. Here is a small selection:\n R for Data Science by Hadley Wickham The R Programming Environment - Coursera Youtube Course by David Langer  MIKIbiomeR Since MIKIbiomeR is still in developement and only accesible via Github, a special package is needed to install it. In the R console install \u0026lsquo;devtools\u0026rsquo; with the following code:\ninstall.packages(\u0026quot;devtools\u0026quot;)\r After devtools is installed MIKIbiomeR can be downloaded from the Github repository. Keep in mind, that the package is not published yet, therefore the access is limited to the MIKI Lab, who have the secrete token.You install the package via the following command:\ndevtools::install_github(repo = \u0026quot;mzembaty/MIKIbiomeR\u0026quot;,\rauth_token = \u0026quot;copy_secrete_token_here\u0026quot;,\rforce = TRUE)\r If you are using a rmarkdown file, keep an eye on your terminal, when installing a new package. Sometimes R needs to make updates to some existing packages and will ask for input, but this shows only in the terminal not in the output panel.\n","date":1576540800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576540800,"objectID":"64407d3e6d5ef382426bdfbcae040c6a","permalink":"/docs/install/","publishdate":"2019-12-17T00:00:00Z","relpermalink":"/docs/install/","section":"docs","summary":"Learn how to install MIKIbiomeR.","tags":null,"title":"Install","type":"docs"},{"authors":null,"categories":null,"content":"Here you will learn the fundamentals of MIKIbiomeR.\nProjects RStudio has a great way to create easy to share distinct analysis, Projects. As a rule of thumb, every experiment should have it\u0026rsquo;s own project. It\u0026rsquo;s also good pratice to keep a seperate folder only for your raw data. After you created a new Project, create a new folder called \u0026lsquo;data\u0026rsquo; in your project folder and copy your raw data into it.\nMIKIbiomeR needs 3 files.\n mapping file otu count table tree file  Now create a new file for you code. This can be either a R script or a Rmarkdown file. You can also use MIKIbiomeR\u0026rsquo;s handy template, since most 16S rRNA analysis share a common structure.\nTo use MIKIbiomeR in the new script, first thing to do is to load the library in R:\nlibrary(\u0026quot;MIKIbiomeR\u0026quot;)\r Loading Data \rIn the whole documentation a dataset will be used, which compares the microbiome in different mice. These mice come from different vendors.\r\r\rThen we load raw data into R using MIKIbiomeR\u0026rsquo;s data_load():\ndata_load(map = \u0026quot;mapping_file_path.txt\u0026quot;,\rotu = \u0026quot;otu_file_path.biom\u0026quot;,\rtree = \u0026quot;tree_file_path.tree)\r This will create a \u0026lsquo;phyloseq object\u0026rsquo; from the phyloseq package.\nIf your raw data is stored in a folder called \u0026lsquo;data\u0026rsquo;, you would point to the location like this:\nphylo \u0026lt;- data_load(map = \u0026quot;data/mapping_file.txt\u0026quot;,\rotu = \u0026quot;data/otu_file.biom\u0026quot;,\rtree = \u0026quot;data/tree_file.tree)\r There are also some example data shipped with the package, which can be accessed with system.path() from base r.\n# get example data path\rmapfile_path \u0026lt;- system.file(\u0026quot;MapFile.txt\u0026quot;, package = \u0026quot;MIKIbiomeR\u0026quot;)\rotu_table_path \u0026lt;- system.file(\u0026quot;final_otutable_tax.biom\u0026quot;, package = \u0026quot;MIKIbiomeR\u0026quot;)\rtree_path \u0026lt;- system.file(\u0026quot;Rep_Set_tree.tree\u0026quot;, package = \u0026quot;MIKIbiomeR\u0026quot;)\r# load data from path\rphylo \u0026lt;- data_load(map = mapfile_path,\rotu = otu_table_path,\rtree = tree_path)\r There is also a ready to use example phyloseq object, which can be simply load with data().\nphylo \u0026lt;- data(mice_B6_N)\r If everything worked correctly the imported data should be converted to a phyloseq object. Printing the object would result in something similiar to this:\n# printing the object by typing out its name\rphylo\r# result\rphyloseq-class experiment-level object\rotu_table() OTU Table: [ 453 taxa and 166 samples ]\rsample_data() Sample Data: [ 166 samples by 16 sample variables ]\rtax_table() Taxonomy Table: [ 453 taxa by 7 taxonomic ranks ]\rphy_tree() Phylogenetic Tree: [ 453 tips and 452 internal nodes ]\r $\\alpha$-Diversity MIKIbiomeR calculates 7 different $\\alpha$-diversity distances (Observed, Chao1, ACE, Shannon, Simpson, InvSimpson,BF_ratio). BF_ratio calculates the bacteroides to firmicutes ratio.\nalpha_div_calc() calculates all the $\\alpha$-diversity distances at once and adds the information to the sample data of the phyloseq object.\nphylo_alpha \u0026lt;- alpha_div_calc(phylo)\r# check results\rsample_data(phylo_alpha)\r     Observed Chao1 se.chao1 ACE se.ACE Shannon Simpson InvSimpson BF_ratio     100L19 93 98.83333 4.164971 104.18753 5.056604 3.431708 0.9424020 17.36171 0.2404653   101L19 88 118.66667 16.940788 109.55210 5.177028 3.081947 0.9152860 11.80442 0.2206887   102L19 82 96.25000 8.653266 99.59932 5.074948 3.158823 0.9256140 13.44339 0.1564885   103L19 82 94.00000 7.959739 93.20114 4.761550 3.119463 0.9242470 13.20080 0.2095097   104L19 83 88.57143 4.240918 91.19668 4.625123 3.250927 0.9324255 14.79848 0.2392315   105L19 84 97.90909 8.683968 98.07586 4.851067 3.185105 0.9288165 14.04820 0.2679954    To plot the distances use either alpha_div_plot() to create only one plot for one distance method or alpha_div_plots() to create all plots at once and output them as a list.\nalpha_div_plot(analysis_alpha, \u0026quot;Vendors\u0026quot;, color_var = \u0026quot;Vendors\u0026quot;,\ralpha_dist = \u0026quot;BF_ratio\u0026quot;)\r alpha_div_plots(analysis_alpha, \u0026quot;Vendors\u0026quot;, color_var = \u0026quot;Vendors\u0026quot;)\r \rAlmost all plots created in MIKIbiomeR are made with ggplot2. They can be adjusted as well as any other ggplot2 object.\nIn Customize Plots are frequently asked customizations, as well as some hints how to use certain parameters.\n\r\r$\\beta$-Diversity How different is the microbial composition in one environment compared to another? Beta diversity shows the difference between microbial communities from different environments. Main focus is on the difference in taxonomic abundance profiles from different samples.\n\rBefore going on we need to normalize the OTU table to the same sample depth.\nTODO: elaborate here\n\r\rOrdination \u0026amp; Adonis To plot multivariate data, ordination is often used. It orders multivariate data in such a way, that similar data is close to each other and dissimilar are further from each other.\nAdonis performs a MANOVA and is an alternative aproach to ordination. It also tries to explain how variation is attributed to different experimental treatments or uncontrolled covariates.\nWith beta_ordination() several computations are combined in one function. $\\beta$-diversity measurements, ordination matrix and adonis are calculated and then plotted together. Additionally adonis calculation results are printed to the console. Over the ordination scatterplot is an optional star plot plotted.\nbeta_ordination(phylo, distance_method = \u0026quot;bray\u0026quot;,\rformula = \u0026quot;Genotype + Experiment + Cage\u0026quot;,\rordination_type = \u0026quot;NMDS\u0026quot;,\rcolor = \u0026quot;Genotype\u0026quot;)\r Direct distance comparison To compare $\\beta$-diversity distances between samples directly beta_dist_calc() should be used and the results plotted with beta_dist_plot().\nbeta_dist \u0026lt;- beta_dist_calc(phylo, var = \u0026quot;Genotype\u0026quot;, dist = \u0026quot;unifrac\u0026quot;)\rbeta_dist_plot(beta_dist)\r Abundance plot abundance_plot() creates a stacked bar plot of taxa abundance.\nThe parameter taxlev sets to which taxonomic level the taxa should be summed up to. The parameter ntaxa sets how many of the most abundand taxa should be displayed individually, the others will be summed up as a group called \u0026ldquo;Others\u0026rdquo;.\nabundance_plot(phylo = phylo, \u0026quot;Vendor\u0026quot;, facetby = \u0026quot;Experiment\u0026quot;)\r Relative abundances can be calculated with calc_rel_abund(), which in turn can be plotted.\nphylo_rel \u0026lt;- calc_rel_abund(phylo)\rabundance_plot(phylo = phylo_rel, \u0026quot;SampleID\u0026quot;, facetby = \u0026quot;Experiment\u0026quot;)\r \r\rThe functions in the topics below are likely to change in the near future!\r\r\rDifferential Abundance Right now MIKIbiomeR supports DESeq2 to calculate differential abundance.\nDESeq2 DESeq2 can compare multivariate data. deseq2_plot() creates a MA-plot, which shows the $log_2$ fold changes attributable to a given variable over the mean of normalized counts for all OTUs.\ndeseq2_res \u0026lt;- MIKIbiomeR::deseq2_analysis(phylo, \u0026quot;Vendor\u0026quot;, alpha = 0.05)\rdeseq2_plot(deseq2_res, title = \u0026quot;HZI vs N6\u0026quot;, label_taxlev = \u0026quot;Family\u0026quot;)\r ALDEx2 ALDEx2 can only compare 2 variables with each other.\naldex2_res \u0026lt;- ALDEx2::aldex(phylo@otu_table, as.character(sample_data(phylo)$Genotype))\rALDEx2::aldex.plot(aldex2_res, type = \u0026quot;MA\u0026quot;, test = \u0026quot;welch\u0026quot;) ALDEx2::aldex.plot(aldex2_res, type=\u0026quot;MW\u0026quot;, test=\u0026quot;welch\u0026quot;)\r LEfSe Coming soon\nRandom Forest Random forest is a machine learning technique. In MIKIbiomeR it is used to produce a classification model. The resulting model gives hints on, which OTUs can explain the best the differences between defined groups.\nmodel \u0026lt;- classify_randomForest(phylo, \u0026quot;Vendor\u0026quot;)\rplot_randomForest_results(model, phylo, \u0026quot;Vendor\u0026quot;, top = 5)\r ","date":1576540800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576540800,"objectID":"3619d638fe221261a106bd43b7639024","permalink":"/docs/basics/","publishdate":"2019-12-17T00:00:00Z","relpermalink":"/docs/basics/","section":"docs","summary":"Learn how to accelerate you 16S rRNA analysis with MIKIbiomeR.","tags":null,"title":"Basics","type":"docs"},{"authors":null,"categories":null,"content":"beta_ordination() This function performs ordination and an adonis test and plots the results. Additionally it prints the results of the adonis test.\nOrdination calculations should be printed If the calculations performed by the ordination should be calculated aswell, set the parameter verbose = TRUE.\nbeta_ordination(phylo, distance_method = \u0026quot;bray\u0026quot;,\rformula = \u0026quot;Genotype + Experiment + Cage\u0026quot;,\rordination_type = \u0026quot;NMDS\u0026quot;,\rcolor = \u0026quot;Genotype\u0026quot;,\rverbose = TRUE)\r Plot only ordination If only the ordination plot should appeare, the parameter formula can be left out.\nbeta_ordination(phylo, distance_method = \u0026quot;bray\u0026quot;,\rordination_type = \u0026quot;NMDS\u0026quot;,\rcolor = \u0026quot;Genotype\u0026quot;)\r No connections between points By default beta_ordination() creates a star plot on top of the ordination plot. To prevent this from happening set the parameter geom_star = FALSE\nbeta_ordination(phylo, distance_method = \u0026quot;bray\u0026quot;,\rordination_type = \u0026quot;NMDS\u0026quot;,\rcolor = \u0026quot;Genotype\u0026quot;)\r abundance_plot() Known issues Stacked percentage bars abundance_plot(phylo = phylo_rel, \u0026quot;Mouse\u0026quot;, facetby = \u0026quot;Genotype\u0026quot;, taxlev = \u0026quot;Family\u0026quot;, ntaxa = 15)\rabundance_plot(phylo = phylo_rel, \u0026quot;Genotype\u0026quot;, facetby = \u0026quot;Genotype\u0026quot;, taxlev = \u0026quot;Family\u0026quot;, ntaxa = 15)\r Creates a bar plot with stacked percentages\n\rOrdering sometimes creates strange outputs ","date":1576540800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576540800,"objectID":"8b6280e50f3e612c91aef0fd9ee82424","permalink":"/docs/customize_plots/","publishdate":"2019-12-17T00:00:00Z","relpermalink":"/docs/customize_plots/","section":"docs","summary":"Learn how to customize MIKIbiomeR plots.","tags":null,"title":"Customize Plots","type":"docs"},{"authors":null,"categories":[],"content":"No features were added in this patch. The functions do basically the same. Instead a consistent naming convention was introduced to the functions. Parameters have a more consistent naming and order. Responsibility of functions was reduced, meaning that one function should handle as few tasks as possible. Therefore some new functions were created. Furthermore the use of return() will from now on be discouraged.\nIn the following the particular changes are listed.\nNew functions  alpha_div_plot() plots only one alpha distance adonis_plot() plots adonis results ordination_plot() plots ordination  Changed function names  alpha_diversity_plus_dt() -\u0026gt; alpha_div_calc() alpha_diversity_plus_plot -\u0026gt; alpha_div_plots() get_beta_distance() -\u0026gt; beta_dist_calc() get_beta_distance_plot() -\u0026gt; beta_dist_plot() facet_barplot() -\u0026gt; abundance_plot()  Specific function changes data_load() Parameter changed:\n \u0026ldquo;OTUTABLE\u0026rdquo; is now \u0026ldquo;otu\u0026rdquo; \u0026ldquo;MAPPINGFILE\u0026rdquo; is now \u0026ldquo;map\u0026rdquo; \u0026ldquo;TREE\u0026rdquo; is now \u0026ldquo;tree\u0026rdquo; additional \u0026ldquo;verbose\u0026rdquo; boolean parameter. If TRUE print step progress.  alpha_div_calc() Parameter changed:\n uses \u0026ldquo;BF_ratio\u0026rdquo; instead of \u0026ldquo;bf_ratio\u0026rdquo;  beta_dist_calc() Parameter changed:\n instead of \u0026ldquo;s\u0026rdquo;, \u0026ldquo;sample_ID\u0026rdquo; is used standard parameter value of dist, describing the distance method, is removed. Since this is an imported decision and users should choose the fitting value.  Added suppressWarnings() to inhibit warning for type conversion in S4 objects. To avoid this warning one has to write considerable amount of code, not changing the outcome.\nget_beta_distances_plot() Parameter changed:\n x and y removed. Comparison and value is always plotted. No parameters needed  Implicit package use Most of the code style package::function was dropped in favor of @importFrom package function style at the start of the function. This makes the code much more readable, but is a little unsafer, since the functions package is not explicitly declared. Many errors poped up only after devtools::install() was used. A lot had to do with some wierd bug, in which one cannot write the following:\n@importFrom package function\rfunction(x) \u0026lt;- foo\r One had to write package::function(x) \u0026lt;- foo\nPackages  replaced egg with patchwork  Bugs found  in alpha_div_calc() an additional X is introduced in the SampleIDs. This issue was bypassed using regexp, which is extremely dangerous! See issue #14 for more on this subject. I don\u0026rsquo;t know how to solve this yet. See issue #15 abundance_plot() only plots relative abundance when x=SampleID.  ","date":1576678674,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576678674,"objectID":"8309da20fd3f2d5be2be93555b5d021d","permalink":"/post/update-0-0-0-2/","publishdate":"2019-12-18T15:17:54+01:00","relpermalink":"/post/update-0-0-0-2/","section":"post","summary":"No features were added in this patch. The functions do basically the same. Instead a consistent naming convention was introduced to the functions. Parameters have a more consistent naming and order. Responsibility of functions was reduced, meaning that one function should handle as few tasks as possible. Therefore some new functions were created. Furthermore the use of return() will from now on be discouraged.\nIn the following the particular changes are listed.","tags":[],"title":"Update 0.0.0.2","type":"post"}]